CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_ACCOUNT_SP(scale float,batches float,wait float)
  returns string
  language javascript
  as
  $$
  var tpcdi_scale = SCALE
  // Load incremental files	
  var batch_counter = 3;
  while (batch_counter <= BATCHES)
  {
    var incrm_stmt = snowflake.createStatement(
      {sqlText: "COPY INTO TPCDI_STG.PUBLIC.ACCOUNT_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=" + tpcdi_scale + "/Batch" + batch_counter + "/Account FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE"}
      );
    incrm_stmt.execute();
    // insert wait here
    stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
    rs = stmt.execute();	
    batch_counter++
  }
  // Suspend Load Task
  var task_stmt = snowflake.createStatement({sqlText: "ALTER TASK TPCDI_STG.PUBLIC.LOAD_ACCOUNT_I_" + tpcdi_scale + "_TSK SUSPEND"});
  task_stmt.execute();
  return "All account files have been loaded.";
  $$
;

CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_I_SP(scale float,batches float,wait float)
	returns float
	language javascript
	as
	$$
	var tpcdi_scale = SCALE
	// Load incremental files	
	var batch_counter = 1;
	while (batch_counter <= BATCHES)	
	{
		var incrm_stmt = snowflake.createStatement(
			{sqlText: "COPY INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=" + tpcdi_scale + "/Batch" + batch_counter + "/CashTransaction FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE"}
			);
		incrm_stmt.execute();
		// insert wait here
		stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
		rs = stmt.execute();	
		batch_counter++
	}
	// Suspend Load Task
	var task_stmt = snowflake.createStatement({sqlText: "ALTER TASK TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_I_" + tpcdi_scale + "_TSK SUSPEND"});
	task_stmt.execute();
	return "All incremental cashtransaction files have been loaded.";
	$$
;




CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_CASHTRANSACTION_SP(files float,wait float)
	returns float
	language javascript
	as
	$$
	// Load historical file
	var hist_stmt = snowflake.createStatement(
		{sqlText: "INSERT INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG SELECT 	 TO_CHAR(NULL) $1 	,ROW_NUMBER() OVER (ORDER BY 1) $2 	,$1 $3 	,$2 $4 	,$3 $5 	,$4 $6 FROM @TPCDI_FILES/load/cash_transaction/CashTransaction01.txt (FILE_FORMAT => 'TXT_PIPE')"}
		);
	hist_stmt.execute();
	// Insert wait here
	stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
	rs = stmt.execute();
	// Load incremental files	
	var file_counter = 2;
	while (file_counter <= FILES)
	{
		var incrm_stmt = snowflake.createStatement(
			{sqlText: "COPY INTO TPCDI_STG.PUBLIC.CASHTRANSACTION_STG FROM @TPCDI_FILES/load/cash_transaction/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0" + file_counter + ".txt' ON_ERROR = SKIP_FILE"}
			);
		incrm_stmt.execute();
		// insert wait here
		stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
		rs = stmt.execute();	
		file_counter++
	}
	return "All cashtransaction files have been loaded.";
	$$
;



CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_CUSTOMER_MGMT_SP(scale float)
  returns string
  language javascript
  as
  $$
  var tpcdi_scale = SCALE
  // Load CUSTOMER_MGMT_STG
  stmt = snowflake.createStatement(
      {sqlText: "COPY INTO TPCDI_STG.PUBLIC.CUSTOMER_MGMT_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=" + tpcdi_scale + "/Batch1/CustomerMgmt FILE_FORMAT = (FORMAT_NAME = 'XML') ON_ERROR=CONTINUE"}
    );
  rs = stmt.execute();
  rs.next();
  // Stop task
  var stoptask_stmt = snowflake.createStatement({sqlText: "ALTER TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_MGMT_" + tpcdi_scale + "_TSK SUSPEND"});
  stoptask_stmt.execute();
  return "All customer_mgmt files have been loaded.";
  $$
;
CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_CUSTOMER_SP(scale float,batches float,wait float)
  returns string
  language javascript
  as
  $$
  var tpcdi_scale = SCALE
  // Load incremental files	
  var batch_counter = 1;
  while (batch_counter <= BATCHES)
  {
    var incrm_stmt = snowflake.createStatement(
      {sqlText: "COPY INTO TPCDI_STG.PUBLIC.CUSTOMER_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=" + tpcdi_scale + "/Batch" + batch_counter + "/Customer FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE"}
      );
    incrm_stmt.execute();
    // insert wait here
    stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
    rs = stmt.execute();	
    batch_counter++
  }
  // Suspend Load Task
  var task_stmt = snowflake.createStatement({sqlText: "ALTER TASK TPCDI_STG.PUBLIC.LOAD_CUSTOMER_I_" + tpcdi_scale + "_TSK SUSPEND"});
  task_stmt.execute();
  return "All customer files have been loaded.";
  $$
;


CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_DAILYMARKET_SP(files float,wait float)
	returns float
	language javascript
	as
	$$
	// Load historical file
	var hist_stmt = snowflake.createStatement(
		{sqlText: "INSERT INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG SELECT	 TO_CHAR(NULL) $1	,ROW_NUMBER() OVER (ORDER BY 1) $2	,$1 $3	,$2 $4	,$3 $5	,$4 $6	,$5 $7	,$6 $8 FROM @TPCDI_FILES/load/daily_market/DailyMarket01.txt (FILE_FORMAT => 'TXT_PIPE')"}
		);
	hist_stmt.execute();
	// Insert wait here
	stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
	rs = stmt.execute();
	// Load incremental files	
	var file_counter = 2;
	while (file_counter <= FILES)
	{
		var incrm_stmt = snowflake.createStatement(
			{sqlText: "COPY INTO TPCDI_STG.PUBLIC.DAILYMARKET_STG FROM @TPCDI_FILES/load/daily_market/ FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') PATTERN='.*0" + file_counter + ".txt' ON_ERROR = SKIP_FILE"}
			);
		incrm_stmt.execute();
		// insert wait here
		stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
		rs = stmt.execute();	
		file_counter++
	}
	return "All dailymarket files have been loaded.";
	$$
;


CREATE OR REPLACE PROCEDURE TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_I_SP(scale float,batches float,wait float)
	returns float
	language javascript
	as
	$$
	var tpcdi_scale = SCALE
	// Load incremental files	
	var batch_counter = 1;
	while (batch_counter <= BATCHES)	
	{
		var incrm_stmt = snowflake.createStatement(
			{sqlText: "COPY INTO TPCDI_STG.PUBLIC.HOLDINGHISTORY_STG FROM @TPCDI_FILES/tmp/tpcdi/sf=" + tpcdi_scale + "/Batch" + batch_counter + "/HoldingHistory FILE_FORMAT = (FORMAT_NAME = 'TXT_PIPE') ON_ERROR = SKIP_FILE"}
			);
		incrm_stmt.execute();
		// insert wait here
		stmt = snowflake.createStatement({sqlText:"call system$wait(" + WAIT + ", 'SECONDS')"});
		rs = stmt.execute();	
		batch_counter++
	}
	// Suspend Load Task
	var task_stmt = snowflake.createStatement({sqlText: "ALTER TASK TPCDI_STG.PUBLIC.LOAD_HOLDING_HISTORY_I_" + tpcdi_scale + "_TSK SUSPEND"});
	task_stmt.execute();
	return "All incremental holding history files have been loaded.";
	$$
;
